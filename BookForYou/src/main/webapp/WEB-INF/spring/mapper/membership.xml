<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.proj.bookforyou.MemberShip.ImemberDAO">


	<!-- select 테이블에 ID 존재하는지 확인 : 반환값 0 or 1 -->
	<select id="isExistId"
		parameterType="com.proj.bookforyou.MemberShip.BfuMember"
		resultType="String">


		SELECT
		NVL2(usrId, '1', '0')
		FROM bfuMember RIGHT OUTER JOIN
		Dual
		on usrId = #{usrid}

	</select>


	<select id="isExistNickName"
		parameterType="com.proj.bookforyou.MemberShip.BfuMember"
		resultType="String">


		SELECT
		NVL2(usrNickname, '1', '0')
		FROM bfuMember RIGHT OUTER
		JOIN Dual
		on usrNickname = #{usrnickname}

	</select>


	<insert id="insertMember"
		parameterType="com.proj.bookforyou.MemberShip.BfuMember">

		INSERT INTO bfuMember(usrId, usrNickName, pw, gender, age, favorite, favorite2, favorite3, serviceState, usrAuthNum)
		VALUES(#{usrid},#{usrnickname},#{pw},#{gender},#{age},#{favorite},#{favorite2},#{favorite3}, 0, #{usrauthnum})

	</insert>
	
	<select id="selectUsrAuthNum" parameterType="com.proj.bookforyou.MemberShip.MemberAuthDTO"
	resultType="String">
	SELECT usrAuthnum
	FROM bfuMember
	WHERE usrId = #{usrid}
	
	</select>
	<update id="updateMemberState" parameterType="com.proj.bookforyou.MemberShip.MemberAuthDTO">
	
	UPDATE bfuMember
	SET serviceState = '1'
	WHERE usrId = #{usrid}
	
	</update>

	<select id="selectUsrinfo" parameterType="com.proj.bookforyou.MemberShip.BfuMember"	resultMap="usrinfo">

	SELECT NVL(pw, '0') pw , NVL(serviceState, '2') serviceState
	FROM bfuMember RIGHT OUTER JOIN Dual
	on usrId = #{usrid}
	
	</select>


	<select id="selectUsrid" parameterType="com.proj.bookforyou.MemberShip.MemberAuthDTO"
	resultType="String">

	SELECT NVL(usrId, '0')
	FROM bfuMember RIGHT OUTER JOIN
	Dual
	on usrId = #{usrid}
	or usrNickName = #{usrnickname}
	
	</select>

	<select id="getLoginSession"
			parameterType="String"
			resultType="com.proj.bookforyou.MemberShip.BfuMember">
		
		SELECT *
		FROM bfuMember
		WHERE usrId = #{usrid}
	
	</select>

	<resultMap type="HashMap" id="usrinfo">

	<id column="pw" property="pw" />
	<id column="serviceState" property="serviceState" />

	</resultMap>
	
	<select id="selectUsrBookLst"
		parameterType="String"
		resultType="com.proj.bookforyou.MemberShip.UsrBookInfo">
	
	SELECT NVL(addcode,'none') addcode
	FROM usrBookInfo RIGHT OUTER JOIN Dual
	ON usrId = #{usrid}
	
	</select>
	
	
	<update id="updateMember" parameterType="com.proj.bookforyou.MemberShip.BfuMember">
	UPDATE bfuMember
	SET usrnickname=#{usrnickname}, pw=#{pw}, age=#{age}, favorite=#{favorite}, favorite2=#{favorite2}, favorite3=#{favorite3}
	WHERE usrId = #{usrid}
	
	
	</update>
	
	<select id="getBookLst_basedHis" parameterType="String" resultType="com.proj.bookforyou.Library.DTO.Bookinfo">
	
	select * from(
		select * from bookinfo
		where addcode LIKE '__'||#{addcode}||'__'
		order by DBMS_RANDOM.RANDOM)
	<![CDATA[ where rownum  < 11 ]]>
	 
		
	</select>
	
	
	<resultMap type="Hashmap" id="usrBookMap">
		<id column="addcode" property="addcode"/>	
	</resultMap>
	
	
</mapper>